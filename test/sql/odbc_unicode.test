# name: test/sql/odbc_unicode.test
# description: Test ODBC extension wstring/Unicode support
# group: [odbc]

require nanodbc

require-env NANODBC_ENVIRONMENT

statement ok
SET variable odbc_connection = (SELECT CASE platform WHEN 'osx_arm64' THEN 'Driver=SQLite Driver;Database=__TEST_DIR__/unicode_test.db' ELSE 'Driver=DuckDB Driver;Database=__TEST_DIR__/unicode_test.db' END FROM pragma_platform());

# Drop test table if it exists
statement ok
CALL odbc_exec(connection=getvariable('odbc_connection'), sql='DROP TABLE IF EXISTS unicode_test;');

# Create a test table with Unicode text
statement ok
CALL odbc_exec(connection=getvariable('odbc_connection'), sql='CREATE TABLE unicode_test (
  id INTEGER PRIMARY KEY,
  description TEXT
);');

# Insert multilingual data
statement ok
CALL odbc_exec(connection=getvariable('odbc_connection'), sql="INSERT INTO unicode_test VALUES
(1, 'English: Hello World!'),
(2, 'Chinese: 你好，世界！'),
(3, 'Russian: Привет, мир!'),
(4, 'Japanese: こんにちは世界！'),
(5, 'Arabic: مرحبا بالعالم!'),
(6, 'Greek: Γειά σου Κόσμε!'),
(7, 'Thai: สวัสดีชาวโลก!'),
(8, 'Hebrew: שלום עולם!'),
(9, 'Emoji: 👋🌍🌎🌏✨'),
(10,'Intralot Primary ¢1m Printer');");

# Test Unicode data retrieval with odbc_scan
query IT
SELECT id, description FROM odbc_scan(table_name='unicode_test', connection=getvariable('odbc_connection')) ORDER BY id;
----
1	English: Hello World!
2	Chinese: 你好，世界！
3	Russian: Привет, мир!
4	Japanese: こんにちは世界！
5	Arabic: مرحبا بالعالم!
6	Greek: Γειά σου Κόσμε!
7	Thai: สวัสดีชาวโลก!
8	Hebrew: שלום עולם!
9	Emoji: 👋🌍🌎🌏✨
10	Intralot Primary ¢1m Printer

# Test with odbc_query
query IT
SELECT id, description FROM odbc_query(connection=getvariable('odbc_connection'), query='SELECT * FROM unicode_test ORDER BY id;');
----
1	English: Hello World!
2	Chinese: 你好，世界！
3	Russian: Привет, мир!
4	Japanese: こんにちは世界！
5	Arabic: مرحبا بالعالم!
6	Greek: Γειά σου Κόσμε!
7	Thai: สวัสดีชาวโลก!
8	Hebrew: שלום עולם!
9	Emoji: 👋🌍🌎🌏✨
10	Intralot Primary ¢1m Printer

# Test with all_varchar parameter
query TT
SELECT id, description FROM odbc_scan(table_name='unicode_test', connection=getvariable('odbc_connection'), all_varchar=true) WHERE id::int BETWEEN 2 AND 5 ORDER BY id;
----
2	Chinese: 你好，世界！
3	Russian: Привет, мир!
4	Japanese: こんにちは世界！
5	Arabic: مرحبا بالعالم!

# Test filtering with Unicode text
query I
SELECT id FROM odbc_query(connection=getvariable('odbc_connection'), query='SELECT id FROM unicode_test WHERE description LIKE ''%你好%'';');
----
2

# Test with different subsets of columns
query T
SELECT description FROM odbc_scan(table_name='unicode_test', connection=getvariable('odbc_connection')) WHERE id = 9;
----
Emoji: 👋🌍🌎🌏✨